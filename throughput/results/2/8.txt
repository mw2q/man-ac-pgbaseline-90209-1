BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'MOZAMBIQUE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'AFRICA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'STANDARD PLATED BRASS'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2197639.52..2197641.35 rows=731 width=38) (actual time=37779.618..37779.618 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=706721 read=306881 dirtied=1197 written=90
   ->  HashAggregate  (cost=2197591.96..2197604.75 rows=731 width=38) (actual time=37779.547..37779.549 rows=2 loops=1)
         Buffers: shared hit=706718 read=306881 dirtied=1197 written=90
         ->  Nested Loop  (cost=498101.91..2197095.18 rows=24839 width=38) (actual time=27990.178..37702.062 rows=24728 loops=1)
               Buffers: shared hit=706718 read=306881 dirtied=1197 written=90
               ->  Nested Loop  (cost=498101.91..2190011.10 rows=24839 width=16) (actual time=27990.092..37438.394 rows=24728 loops=1)
                     Buffers: shared hit=657262 read=306881 dirtied=1197 written=90
                     ->  Hash Join  (cost=498101.91..2182777.91 rows=24839 width=16) (actual time=27990.044..36977.957 rows=24728 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=582928 read=306881 dirtied=1197 written=90
                           ->  Nested Loop  (cost=0.00..1682382.96 rows=408929 width=16) (actual time=0.375..7587.840 rows=406299 loops=1)
                                 Buffers: shared hit=258232 read=218004 dirtied=1197 written=86
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..47001.16 rows=13553 width=4) (actual time=0.309..331.220 rows=13533 loops=1)
                                       Index Cond: (p_type = 'STANDARD PLATED BRASS'::text)
                                       Heap Fetches: 13533
                                       Buffers: shared hit=41 read=11622 written=2
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.36 rows=31 width=20) (actual time=0.057..0.518 rows=30 loops=13533)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=258191 read=206382 dirtied=1197 written=84
                           ->  Hash  (cost=486644.73..486644.73 rows=916575 width=8) (actual time=27988.716..27988.716 rows=911930 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35623kB
                                 Buffers: shared hit=324693 read=88877 written=4
                                 ->  Hash Join  (cost=136763.03..486644.73 rows=916575 width=8) (actual time=6137.929..27202.955 rows=911930 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=324693 read=88877 written=4
                                       ->  Bitmap Heap Scan on orders  (cost=97732.41..421262.57 rows=4582877 width=12) (actual time=3856.808..10221.911 rows=4561664 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=186481 read=80940 written=4
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..96586.69 rows=4582877 width=0) (actual time=3745.369..3745.369 rows=4584480 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared read=12634
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=2280.372..2280.372 rows=299493 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10530kB
                                             Buffers: shared hit=138212 read=7937
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=37.333..1360.930 rows=299493 loops=1)
                                                   Buffers: shared hit=138212 read=7937
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.036..0.107 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.019 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                     Filter: (r_name = 'AFRICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=32.593..252.991 rows=59899 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=138210 read=7937
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.998..21.998 rows=59899 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=7 read=826
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=24728)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=74334
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.007..0.007 rows=1 loops=24728)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=49456
 Total runtime: 37801.536 ms
(64 rows)

COMMIT;
COMMIT
